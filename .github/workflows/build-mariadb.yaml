name: "Build MariaDB"
on:
  workflow_dispatch:
    inputs:
      mariadb-versions:
        description: MariaDB versions to build (JSON Array)
        required: true
        default: ""

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  list:
    runs-on: ubuntu-latest
    steps:
      - id: set-matrix
        run: |
          {
            echo "suffix=$(date +%Y%m%d%H%M%S)"
            echo "matrix-releases=$(printenv MARIADB_VERSIONS | jq -c '{mariadb: .}')"
            echo "matrix-linux=$(printenv MARIADB_VERSIONS | jq -c '{mariadb: . , os: ["ubuntu-24.04", "ubuntu-22.04", "ubuntu-24.04-arm", "ubuntu-22.04-arm"]}')"
            echo "matrix-darwin=$(printenv MARIADB_VERSIONS | jq -c '{mariadb: ., os: ["macos-15-intel", "macos-14"]}')"
            echo "matrix-windows=$(printenv MARIADB_VERSIONS | jq -c '{mariadb: .}')"
          } >> "$GITHUB_OUTPUT"
        env:
          MARIADB_VERSIONS: ${{ github.event.inputs.mariadb-versions }}
    outputs:
      suffix: ${{ steps.set-matrix.outputs.suffix }}
      matrix-releases: ${{ steps.set-matrix.outputs.matrix-releases }}
      matrix-linux: ${{ steps.set-matrix.outputs.matrix-linux }}
      matrix-darwin: ${{ steps.set-matrix.outputs.matrix-darwin }}
      matrix-windows: ${{ steps.set-matrix.outputs.matrix-windows }}

  create-releases:
    runs-on: ubuntu-latest
    needs: list
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.list.outputs.matrix-releases) }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: create release
        run: |
          gh release create "mariadb-$MARIADB_VERSION-$SUFFIX" --draft --title "MariaDB $MARIADB_VERSION" --notes "MariaDB $MARIADB_VERSION built by shogo82148/build-mysql"
        env:
          MARIADB_VERSION: ${{ matrix.mariadb }}
          SUFFIX: ${{ needs.list.outputs.suffix }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ${{ matrix.os}}
    needs: [list, create-releases]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.list.outputs.matrix-linux) }}
    timeout-minutes: 180
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: build MariaDB
        run: ./build-mariadb-linux.sh "$MARIADB_VERSION"
        env:
          MARIADB_VERSION: ${{ matrix.mariadb }}
      - name: upload
        run: |
          case "$(uname -m)" in
              "x86_64")
                  MARIADB_ARCH="x64"
                  ;;
              "arm64" | "aarch64")
                  MARIADB_ARCH="arm64"
                  ;;
              *)
                  echo "unsupported architecture: $(uname -m)"
                  exit 1
                  ;;
          esac
          mv "$RUNNER_TEMP/mariadb.tar.zstd" "$RUNNER_TEMP/mariadb-$MARIADB_VERSION-${BUILD_OS%-arm}-$MARIADB_ARCH.tar.zstd"
          gh release upload "mariadb-$MARIADB_VERSION-$SUFFIX" "$RUNNER_TEMP/mariadb-$MARIADB_VERSION-${BUILD_OS%-arm}-$MARIADB_ARCH.tar.zstd"
        env:
          MARIADB_VERSION: ${{ matrix.mariadb }}
          BUILD_OS: ${{ matrix.os }}
          SUFFIX: ${{ needs.list.outputs.suffix }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: attest-build-provenance
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          subject-path: ${{ runner.temp }}/*.tar.zstd

  build-darwin:
    runs-on: ${{ matrix.os}}
    needs: [list, create-releases]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.list.outputs.matrix-darwin) }}
    timeout-minutes: 180
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: install bison
        run: |
          # pre-installed version is too old.
          # install new one.
          brew install bison
      - name: build MariaDB
        run: ./build-mariadb-darwin.sh "$MARIADB_VERSION"
        env:
          MARIADB_VERSION: ${{ matrix.mariadb }}
      - name: upload
        run: |
          case "$(uname -m)" in
              "x86_64")
                  MARIADB_ARCH="x64"
                  ;;
              "arm64" | "aarch64")
                  MARIADB_ARCH="arm64"
                  ;;
              *)
                  echo "unsupported architecture: $(uname -m)"
                  exit 1
                  ;;
          esac
          mv "$RUNNER_TEMP/mariadb.tar.zstd" "$RUNNER_TEMP/mariadb-$MARIADB_VERSION-darwin-$MARIADB_ARCH.tar.zstd"
          gh release upload "mariadb-$MARIADB_VERSION-$SUFFIX" "$RUNNER_TEMP/mariadb-$MARIADB_VERSION-darwin-$MARIADB_ARCH.tar.zstd"
        env:
          MARIADB_VERSION: ${{ matrix.mariadb }}
          SUFFIX: ${{ needs.list.outputs.suffix }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: attest-build-provenance
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          subject-path: ${{ runner.temp }}/*.tar.zstd

  build-windows:
    runs-on: windows-2022
    needs: [list, create-releases]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.list.outputs.matrix-windows) }}
    timeout-minutes: 180
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: build MariaDB
        run: .\build-mariadb-windows.ps1 $env:MARIADB_VERSION
        env:
          MARIADB_VERSION: ${{ matrix.mariadb }}
      - name: upload
        shell: bash
        run: |
          TEMP_DIR=$(cygpath "C:\\Temp")
          mv "$TEMP_DIR/mariadb.zip" "$TEMP_DIR/mariadb-$MARIADB_VERSION-win32-x64.zip"
          gh release upload "mariadb-$MARIADB_VERSION-$SUFFIX" "$TEMP_DIR/mariadb-$MARIADB_VERSION-win32-x64.zip"
        env:
          MARIADB_VERSION: ${{ matrix.mariadb }}
          SUFFIX: ${{ needs.list.outputs.suffix }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          subject-path: C:\Temp\*.zip

  publish-releases:
    runs-on: ubuntu-latest
    needs: [list, build-linux, build-darwin, build-windows]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.list.outputs.matrix-releases) }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: publish release
        run: |
          gh release edit "mariadb-$MARIADB_VERSION-$SUFFIX" --draft=false
        env:
          MARIADB_VERSION: ${{ matrix.mariadb }}
          SUFFIX: ${{ needs.list.outputs.suffix }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
